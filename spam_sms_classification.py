# -*- coding: utf-8 -*-
"""Spam SMS Classification.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lyFI6Q8pm56WXkhp7QidLwZ_WMlZ1ygd
"""

import pandas as pd

# Adjust filename if different
df = pd.read_csv("spam.csv", encoding="latin-1")
df.head()
df.info()
df.isnull().sum()

# Keep only the two real columns
df = df[['Category', 'Message']]

# Rename them for clarity
df.columns = ['label', 'text']

# Check your class counts
print(df['label'].value_counts())

from sklearn.preprocessing import LabelEncoder
from sklearn.feature_extraction.text import CountVectorizer

# 1. Encode “ham”/“spam” → 0/1
le = LabelEncoder()
df['label_enc'] = le.fit_transform(df['label'])

# 2. Convert raw SMS text → bag‑of‑words
cv = CountVectorizer(stop_words='english')
X = cv.fit_transform(df['text'])

# 3. Target vector
y = df['label_enc']

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(
    X, y,
    test_size=0.20,       # 80% train, 20% test
    random_state=42,
    stratify=y            # preserve “ham”/“spam” ratio
)

from sklearn.naive_bayes import MultinomialNB

model = MultinomialNB()
model.fit(X_train, y_train)

from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

y_pred = model.predict(X_test)

print("Accuracy:", accuracy_score(y_test, y_pred))
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred))
print("Classification Report:\n", classification_report(y_test, y_pred))

import matplotlib.pyplot as plt
import seaborn as sns  # small exception for easy plotting

cm = confusion_matrix(y_test, y_pred)
sns.heatmap(cm, annot=True, fmt='d')
plt.xlabel("Predicted")
plt.ylabel("Actual")
plt.show()